This is User App:
this is the main application structure code:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.codewithsk.barber">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Barber">
        <activity android:name=".SecondOtpActivity"></activity>
        <activity android:name=".CategoryDatailsActivity" />
        <activity android:name=".OtpActivity" />
        <activity android:name=".RegistrationActivity" />
        <activity android:name=".LoginActivity" />
        <activity android:name=".HomeActivity" />
        <activity android:name=".SplashScreenActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <service android:name=".NotificationService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <meta-data
            android:name="preloaded_fonts"
            android:resource="@array/preloaded_fonts" />
    </application>
</manifest>

this is intro screen code:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/splashback"
    tools:context=".SplashScreenActivity">

    <ImageView
        android:id="@+id/imgLogo"
        android:layout_width="178dp"
        android:layout_height="155dp"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="150dp"
        android:src="@drawable/logotype" />

    <TextView
        android:id="@+id/shopeName"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imgLogo"
        android:layout_marginTop="42dp"
        android:gravity="center"
        android:text="The Look"
        android:textAllCaps="true"
        android:textColor="@color/black"
        android:textSize="20dp"
        android:textStyle="bold"
        android:typeface="serif" />

    <ProgressBar
        android:id="@+id/progressBar"
        style="?android:attr/progressBarStyle"
        android:layout_width="89dp"
        android:layout_height="77dp"
        android:layout_below="@+id/shopeName"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="159dp"
        android:layout_marginLeft="159dp"
        android:layout_marginTop="143dp"
        android:layout_marginEnd="163dp"
        android:layout_marginRight="163dp"
        android:layout_marginBottom="229dp" />

</RelativeLayout>
package com.codewithsk.barber;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings;

public class SplashScreenActivity extends AppCompatActivity {

    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        SystemChanges.stustusbarColor(this);

        if (!isInternetConnected(this))
        {
            showCustemDialog();
        }
        else {
            new Handler().postDelayed(new Runnable() {
                @Override
                public void run() {
                    startActivity(new Intent(SplashScreenActivity.this,LoginActivity.class));
                    finish();
                }
            },3000);
        }
    }
    private boolean isInternetConnected(SplashScreenActivity splashScreenActivity) {
        ConnectivityManager connectivityManager = (ConnectivityManager) splashScreenActivity.getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo wifiConn = connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
        NetworkInfo mobileConn = connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);
        if ((wifiConn != null && wifiConn.isConnected()) || (mobileConn != null && mobileConn.isConnected())){
            return true;
        }else {
            return false;
        }
    }
    private void showCustemDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(SplashScreenActivity.this);
        builder.setMessage("Please Connect Your Internet and try again!!!")
                .setCancelable(false).setNegativeButton("Exit", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                finish();
                System.exit(0);
            }
        });
        AlertDialog dialog = builder.create();
        dialog.show();
    }
}

This is Login Screen code:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:background="@color/splashback"
    android:layout_height="match_parent"
    android:padding="8dp"
    tools:context=".LoginActivity">
    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/logotype"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="200dp"
        android:id="@+id/logotype"/>
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense"
        android:hint="Mobile No"
        android:layout_below="@id/logotype"
        android:id="@+id/layout1">
        <com.google.android.material.textfield.TextInputEditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:id="@+id/editMbNo"
            android:maxLength="10"
            android:inputType="number"/>
    </com.google.android.material.textfield.TextInputLayout>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:id="@+id/btnNextLogin"
        android:layout_marginTop="8dp"
        android:text="Login"
        android:layout_centerHorizontal="true"
        android:layout_below="@+id/layout1"/>
    <View
        android:layout_width="match_parent"
        android:layout_height="3dp"
        android:background="#000"
        android:layout_marginTop="10dp"
        android:id="@+id/v1"
        android:layout_below="@+id/btnNextLogin"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginTop="5dp"
        android:text="New User Registration Here?"
        android:id="@+id/goToRegistration"
        android:layout_below="@id/v1"/>
    <View
        android:layout_width="match_parent"
        android:layout_height="2dp"
        android:layout_marginTop="10dp"
        android:background="#000"
        android:id="@+id/v2"
        android:layout_below="@+id/goToRegistration"
        />

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Skip Steps"
        android:layout_marginTop="5dp"
        android:gravity="center"
        android:id="@+id/goToSkip"
        android:layout_below="@id/v2"/>

    <View
        android:layout_width="match_parent"
        android:layout_height="3dp"
        android:layout_marginTop="10dp"
        android:background="#000"
        android:id="@+id/v3"
        android:layout_below="@+id/goToSkip"
        />


</RelativeLayout>
package com.codewithsk.barber;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

import com.codewithsk.barber.databinding.ActivityLoginBinding;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import static com.codewithsk.barber.SessonManger.SAGAR;
import static com.codewithsk.barber.SessonManger.SESSON_NAME;


public class LoginActivity extends AppCompatActivity {
    ActivityLoginBinding binding;

    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivityLoginBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        binding.btnNextLogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String number = binding.editMbNo.getText().toString().trim();
                if (number.isEmpty()){
                    Toast.makeText(LoginActivity.this, "Enter Mobile No", Toast.LENGTH_SHORT).show();
                    return;
                }else {
                    Intent intent = new Intent(LoginActivity.this, SecondOtpActivity.class);
                    intent.putExtra("MobileNo", number);
                    startActivity(intent);
                }
            }
        });
        SystemChanges.stustusbarColor(this);

        binding.goToRegistration.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(LoginActivity.this,RegistrationActivity.class));
                finish();
            }
        });
        binding.goToSkip.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SessonManger.startSesson(LoginActivity.this,SAGAR);
                startActivity(new Intent(LoginActivity.this,HomeActivity.class));
                finish();
            }
        });
    }
    @Override
    protected void onStart() {
        super.onStart();
        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
        SharedPreferences sharedPreferences = getSharedPreferences(SESSON_NAME, Context.MODE_PRIVATE);
        String checkValue = sharedPreferences.getString("START",null);
        if (checkValue != null || user != null){
            startActivity(new Intent(LoginActivity.this,HomeActivity.class));
            finish();
        }
    }
}

This is Registration screen code:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:background="@color/splashback"
    android:padding="10dp"
    android:layout_height="match_parent"
    tools:context=".RegistrationActivity">
    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/logotype"
        android:layout_marginTop="100dp"
        android:layout_centerHorizontal="true"
        android:id="@+id/logotype1"/>
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_marginTop="20dp"
        android:layout_below="@id/logotype1"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense"
        android:hint="Full Name"
        android:id="@+id/reg_layout1">
        <com.google.android.material.textfield.TextInputEditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:inputType="text"
            android:id="@+id/regname"/>
    </com.google.android.material.textfield.TextInputLayout>
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense"
        android:hint="Mobile No"
        android:layout_below="@id/reg_layout1"
        android:id="@+id/reg_layout2">
        <com.google.android.material.textfield.TextInputEditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:id="@+id/regnumber"
            android:maxLength="10"
            android:inputType="number"/>
    </com.google.android.material.textfield.TextInputLayout>
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense"
        android:hint="Age"
        android:layout_below="@id/reg_layout2"
        android:id="@+id/reg_layout3">
        <com.google.android.material.textfield.TextInputEditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:id="@+id/regage"
            android:maxLength="3"
            android:inputType="number"/>
    </com.google.android.material.textfield.TextInputLayout>
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense"
        android:hint="Pin Code Or Area Code"
        android:layout_below="@id/reg_layout3"
        android:id="@+id/reg_layout4">
        <com.google.android.material.textfield.TextInputEditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:id="@+id/regpincode"
            android:maxLength="10"
            android:inputType="number"/>
    </com.google.android.material.textfield.TextInputLayout>
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/reg_layout4"
        android:gravity="center"
        android:id="@+id/layout5"
        android:weightSum="1"
        android:orientation="horizontal">
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textStyle="bold"
            android:textColor="#000"
            android:text="Select Gender: "/>
        <RadioGroup
            android:id="@+id/radioSex"
            android:layout_weight=".5"
            android:orientation="horizontal"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" >

            <RadioButton
                android:id="@+id/radioMale"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="male"
                android:checked="true" />

            <RadioButton
                android:id="@+id/radioFemale"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="female" />

        </RadioGroup>
    </LinearLayout>
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:text="Register"
        android:id="@+id/btnUserRegister"
        android:layout_below="@+id/layout5"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="8dp"/>
</RelativeLayout>
package com.codewithsk.barber;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.RadioButton;
import android.widget.Toast;

import com.codewithsk.barber.databinding.ActivityRegistrationBinding;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.Query;
import com.google.firebase.database.ValueEventListener;

public class RegistrationActivity extends AppCompatActivity {
    ActivityRegistrationBinding binding;

    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivityRegistrationBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        SystemChanges.stustusbarColor(this);
        binding.btnUserRegister.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                register();
            }
        });


    }
    public void register(){
        String name = binding.regname.getText().toString().trim();
        String mobile_no = binding.regnumber.getText().toString().trim();
        String age = binding.regage.getText().toString().trim();
        String pincode = binding.regpincode.getText().toString().trim();
        String gender = "";
        if (name.isEmpty() || mobile_no.isEmpty() || age.isEmpty() || pincode.isEmpty()){
            Toast.makeText(this, "Some Feilds are empty!! please feel all deatails!", Toast.LENGTH_LONG).show();
            return;
        }else{
            if (binding.radioMale.isChecked()){
                gender = "Male";
            }
            if (binding.radioFemale.isChecked()){
                gender = "Female";
            }
            Intent i = new Intent(RegistrationActivity.this,OtpActivity.class);
            i.putExtra("name",name);
            i.putExtra("phone",mobile_no);
            i.putExtra("age",age);
            i.putExtra("pincode",pincode);
            i.putExtra("gender",gender);
            startActivity(i);
        }
    }
}
This is OTP screen code:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:background="@color/splashback"
    android:layout_height="match_parent"
    tools:context=".OtpActivity">
    <include layout="@layout/loading"
        android:visibility="gone"
        android:id="@+id/otpLoadingLayout"/>
    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/logotype"
        android:layout_marginTop="100dp"
        android:layout_centerHorizontal="true"
        android:id="@+id/logotype2"/>
    <EditText
        android:id="@+id/otp_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:hint="Enter OTP"
        android:gravity="center"
        android:maxLength="6"
        android:layout_marginTop="20dp"
        android:layout_below="@+id/logotype2"
        android:layout_centerHorizontal="true"
     />
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="finish"
        android:id="@+id/btnFinish"
        android:layout_below="@+id/otp_view"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="10dp"/>

</RelativeLayout>
package com.codewithsk.barber;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

import com.codewithsk.barber.databinding.ActivitySecondOtpBinding;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthOptions;
import com.google.firebase.auth.PhoneAuthProvider;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.concurrent.TimeUnit;

import static com.codewithsk.barber.SessonManger.FIREBASE_USER;

public class SecondOtpActivity extends AppCompatActivity {
    private ActivitySecondOtpBinding binding;
    private String verificationId;
    private FirebaseAuth mAuth;
    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivitySecondOtpBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        String phone = getIntent().getStringExtra("MobileNo");
        SystemChanges.stustusbarColor(this);
        mAuth = FirebaseAuth.getInstance();
        PhoneAuthOptions options =
                PhoneAuthOptions.newBuilder(mAuth)
                        .setPhoneNumber("+91"+ phone)
                        .setTimeout(60L, TimeUnit.SECONDS)
                        .setActivity(SecondOtpActivity.this)
                        .setCallbacks(mCallback)
                        .build();
        PhoneAuthProvider.verifyPhoneNumber(options);
        binding.btnFinish1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (binding.otpView1.getText().toString().isEmpty()){
                    Toast.makeText(SecondOtpActivity.this, "Please Enter OTP", Toast.LENGTH_SHORT).show();
                    return;
                }else {
                    verifyCode(binding.otpView1.getText().toString());
                }
            }
        });

    }
    PhoneAuthProvider.OnVerificationStateChangedCallbacks mCallback = new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
        @Override
        public void onVerificationCompleted(@NonNull PhoneAuthCredential phoneAuthCredential) {
            String code = phoneAuthCredential.getSmsCode();
            if (code != null){
                binding.otpView1.setText(code);
                verifyCode(code);
            }
        }

        @Override
        public void onVerificationFailed(@NonNull FirebaseException e) {
            Toast.makeText(SecondOtpActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();
        }

        @Override
        public void onCodeSent(@NonNull String s, @NonNull PhoneAuthProvider.ForceResendingToken forceResendingToken) {
            super.onCodeSent(s, forceResendingToken);
            verificationId = s;
        }
    };
    private void verifyCode(String code) {
        PhoneAuthCredential credential = PhoneAuthProvider.getCredential(verificationId, code);
        signInWithPhoneAuthCredential(credential);
        binding.laodingLayouts.laodingLayout.setVisibility(View.VISIBLE);
    }
    private void signInWithPhoneAuthCredential(PhoneAuthCredential credential) {
        mAuth.signInWithCredential(credential)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {

                        if (task.isSuccessful()) {
                            binding.laodingLayouts.laodingLayout.setVisibility(View.GONE);
                            DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference("Users")
                                    .child(mAuth.getCurrentUser().getUid());
                            ValueEventListener listener = new ValueEventListener() {
                                @Override
                                public void onDataChange(@NonNull DataSnapshot snapshot) {
                                        if (snapshot.exists()){
                                            binding.laodingLayouts.laodingLayout.setVisibility(View.GONE);
                                            SessonManger.startSesson(SecondOtpActivity.this,FIREBASE_USER);
                                            Toast.makeText(SecondOtpActivity.this, "Login Success", Toast.LENGTH_SHORT).show();
                                            Intent intent = new Intent(SecondOtpActivity.this,HomeActivity.class);
                                            startActivity(intent);
                                            finish();
                                        }else {
                                            binding.laodingLayouts.laodingLayout.setVisibility(View.GONE);
                                            Toast.makeText(SecondOtpActivity.this, "Your are not registrated user! " +
                                                    "\n" + "registere First!!", Toast.LENGTH_SHORT).show();
                                            Intent intent = new Intent(SecondOtpActivity.this,RegistrationActivity.class);
                                            startActivity(intent);
                                            finish();
                                        }

                                }

                                @Override
                                public void onCancelled(@NonNull DatabaseError error) {
                                    binding.laodingLayouts.laodingLayout.setVisibility(View.GONE);
                                    Toast.makeText(SecondOtpActivity.this, error.getMessage(), Toast.LENGTH_SHORT).show();
                                }
                            };
                            databaseReference.addListenerForSingleValueEvent(listener);

                        } else {
                            binding.laodingLayouts.laodingLayout.setVisibility(View.GONE);
                            Toast.makeText(SecondOtpActivity.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    }
}

This is main Screen code:
<?xml version="1.0" encoding="utf-8"?>
<androidx.drawerlayout.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@+id/drawer_layout"
    android:fitsSystemWindows="true"
    tools:openDrawer="start">

    <include
        layout= "@layout/app_bar_main"
        android:layout_width= "match_parent"
        android:layout_height= "match_parent" />

    <com.google.android.material.navigation.NavigationView
        android:id="@+id/nav_view"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity= "start"
        android:fitsSystemWindows="true"
        app:menu="@menu/nav_menu"
        app:headerLayout="@layout/nav_header"
        />

</androidx.drawerlayout.widget.DrawerLayout>
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="@dimen/nav_header_height"
    xmlns:tools="http://schemas.android.com/tools"
    android:background="@color/splashback"
    android:gravity="bottom"
    android:orientation="vertical"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    tools:viewBindingIgnore="true"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:theme="@style/ThemeOverlay.AppCompat.Dark">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="welcome to barbar apk"
        android:textColor="@color/black"
        android:textSize="15dp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="20dp"
        android:text="Your Have Guest!please Login"
        android:id="@+id/UserNameTextUsers"
        android:textColor="@color/black"
        android:textStyle="bold"/>
</LinearLayout>
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:background="#65000000"
    android:id="@+id/laoding_layout"
    style="@style/Fullscreen"
    android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imgLogoLoadinView"
        android:layout_width="98dp"
        android:layout_height="90dp"
        android:layout_centerInParent="true"
        android:src="@drawable/logotype" />

    <ProgressBar
        android:id="@+id/progressBarLoading"
        android:layout_width="165dp"
        android:layout_height="125dp"
        android:layout_alignStart="@+id/imgLogoLoadinView"
        android:layout_alignLeft="@+id/imgLogoLoadinView"
        android:layout_alignTop="@+id/imgLogoLoadinView"
        android:layout_alignEnd="@+id/imgLogoLoadinView"
        android:layout_alignRight="@+id/imgLogoLoadinView"
        android:layout_alignBottom="@+id/imgLogoLoadinView"
        android:layout_marginStart="-34dp"
        android:layout_marginLeft="-34dp"
        android:layout_marginTop="-20dp"
        android:layout_marginEnd="-33dp"
        android:layout_marginRight="-33dp"
        android:layout_marginBottom="-15dp" />

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Loading....."
        android:layout_below="@+id/progressBarLoading"
        android:textStyle="bold"
        android:layout_marginTop="30dp"
        android:gravity="center"
        android:textSize="20dp"/>

</RelativeLayout>
<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@+id/container"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:context=".HomeActivity"
    tools:showIn="@layout/app_bar_main">

</FrameLayout>
<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto">
    <com.google.android.material.appbar.AppBarLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        >
        <androidx.appcompat.widget.Toolbar
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:elevation="6dp"
            android:id="@+id/toolbars"
            android:background="@color/splashback">
            <ImageButton
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@android:color/transparent"
                android:src="@drawable/ic_baseline_menu_24"
                android:id="@+id/nav_open"/>
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:textStyle="bold"
                android:id="@+id/toolbarTitle"
                android:textColor="@color/black"
                android:layout_marginLeft="20dp"/>
        </androidx.appcompat.widget.Toolbar>

    </com.google.android.material.appbar.AppBarLayout>
    <include layout= "@layout/containt_main" />
    <include layout="@layout/loading" />
</androidx.coordinatorlayout.widget.CoordinatorLayout>
package com.codewithsk.barber;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.core.view.GravityCompat;
import androidx.fragment.app.Fragment;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.codewithsk.barber.databinding.ActivityHomeBinding;
import com.google.android.material.navigation.NavigationView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.messaging.FirebaseMessaging;

import static com.codewithsk.barber.SessonManger.FIREBASE_USER;
import static com.codewithsk.barber.SessonManger.SAGAR;
import static com.codewithsk.barber.SessonManger.SESSON_NAME;
import static com.codewithsk.barber.SessonManger.START;

public class HomeActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
    ActivityHomeBinding binding;
    Toolbar toolbar;
    TextView title;
    ImageButton open;
    private RelativeLayout newLoadingLayout;
    SharedPreferences sharedPreferences;
    @SuppressLint("SetTextI18n")
    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivityHomeBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        newLoadingLayout = findViewById(R.id.laoding_layout);

        sharedPreferences = getSharedPreferences(SESSON_NAME, Context.MODE_PRIVATE);

        toolbar  = findViewById(R.id.toolbars);
        title = findViewById(R.id.toolbarTitle);
        isCheckGenderMaleOrFemale();
        if (sharedPreferences.getString(START,"").equals(SAGAR)){
            Toast.makeText(this, "No Any User Found", Toast.LENGTH_SHORT).show();
        }else {
          DatabaseReference  dRef = FirebaseDatabase.getInstance().getReference("Users")
                  .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
            dRef.addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(@NonNull DataSnapshot snapshot) {
                    if (snapshot.exists()) {
                        TextView username = (TextView) findViewById(R.id.UserNameTextUsers);
                        String value = snapshot.getValue(User.class).getName();
                        username.setText("Mr. " + value);
                    } else {
                        Toast.makeText(HomeActivity.this, "Error", Toast.LENGTH_SHORT).show();
                    }
                }

                @Override
                public void onCancelled(@NonNull DatabaseError error) {
                    Toast.makeText(HomeActivity.this, "nav: " + error.getMessage(), Toast.LENGTH_LONG).show();
                }
            });
        }
        SystemChanges.stustusbarColor(this);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this,binding.drawerLayout,R.string.navigation_drawer_open,R.string.navigation_drawer_close
        );
        open = findViewById(R.id.nav_open);
        open.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                binding.drawerLayout.openDrawer(GravityCompat.START);
            }
        });
        binding.drawerLayout.addDrawerListener(toggle);
        toggle.syncState();
        binding.navView.setNavigationItemSelectedListener(this);
    }

    @SuppressLint({"NonConstantResourceId", "SetTextI18n"})
    @Override
    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
        int id = item.getItemId();
        Fragment fragment = null;
        switch (id){
            case R.id.nav_male:
                fragment = new MaleServiceFragment();
                title.setText(R.string.male_services);
                break;
            case R.id.nav_female:
                fragment = new FemaleServiceFragment();
                title.setText(R.string.female_services);
                break;
            case R.id.nav_ytchannel:
                String valuess = sharedPreferences.getString(START,"");
                if (valuess.equals(SAGAR)){
                    Toast.makeText(this, "First Login Here!!", Toast.LENGTH_SHORT).show();
                }else {
                    fragment = new MyAppointmentsFragment();
                    title.setText(R.string.my_bookings);
                }
                break;
            case R.id.nav_profile:
                String pValue = sharedPreferences.getString(START,"");
                if (pValue.equals(SAGAR)){
                    Toast.makeText(this, "First Login Here!!", Toast.LENGTH_SHORT).show();
                }else {
                    fragment = new ProfileFragment();
                    title.setText(R.string.my_profile);
                }
                break;
            case R.id.nav_about:
                fragment = new AboutUsFragment();
                title.setText("Contact Us");
                break;
            case R.id.nav_logout:
                SessonManger.removeSesson(HomeActivity.this, START);
                startActivity(new Intent(HomeActivity.this, LoginActivity.class));
                break;
            default:
                fragment = new MaleServiceFragment();
                title.setText(R.string.male_services);
                break;

        }
          if (fragment != null) {
            getSupportFragmentManager().beginTransaction().replace(R.id.container,fragment).commit();
        }
        binding.drawerLayout.closeDrawer(GravityCompat.START);
        return true;
    }
    public void isCheckGenderMaleOrFemale() {
        String checkGuest = sharedPreferences.getString(START, "");
        if (checkGuest.equals(FIREBASE_USER)) {
            DatabaseReference checkGender = FirebaseDatabase.getInstance().getReference("Users")
                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
            checkGender.addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(@NonNull DataSnapshot snapshot) {
                    if (snapshot.exists()) {
                        String genderCheck = snapshot.getValue(User.class).getGender();
                        if (genderCheck.equals("Male")) {
                            newLoadingLayout.setVisibility(View.GONE);
                            title.setText(R.string.male_services);
                            getSupportFragmentManager().beginTransaction().replace(R.id.container, new MaleServiceFragment()).commit();
                            FirebaseMessaging.getInstance().subscribeToTopic("Male");
                            FirebaseMessaging.getInstance().unsubscribeFromTopic("Female");
                        } else {
                            newLoadingLayout.setVisibility(View.GONE);
                            title.setText(R.string.female_services);
                            getSupportFragmentManager().beginTransaction().replace(R.id.container, new FemaleServiceFragment()).commit();
                            FirebaseMessaging.getInstance().subscribeToTopic("Female");
                            FirebaseMessaging.getInstance().unsubscribeFromTopic("Male");
                        }
                    }
                }

                @Override
                public void onCancelled(@NonNull DatabaseError error) {
                    newLoadingLayout.setVisibility(View.GONE);
                    Toast.makeText(HomeActivity.this, error.getMessage(), Toast.LENGTH_SHORT).show();
                }
            });
        } else {
            newLoadingLayout.setVisibility(View.GONE);
            title.setText(R.string.male_services);
            getSupportFragmentManager().beginTransaction().replace(R.id.container, new MaleServiceFragment()).commit();
        }
    }
}

this is Male services code:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="@color/splashback"
    tools:context=".MaleServiceFragment">

    <androidx.recyclerview.widget.RecyclerView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        tools:listitem="@layout/offere_list"
        android:visibility="gone"
        android:orientation="horizontal"
        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
        app:reverseLayout="false"
        android:id="@+id/maleOffereRecyclerView"/>

    <androidx.recyclerview.widget.RecyclerView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_below="@+id/maleOffereRecyclerView"
        android:id="@+id/categiryRecyclerView"
        tools:listitem="@layout/categiri_list" />

    <include layout="@layout/loading"/>
</RelativeLayout>
package com.codewithsk.barber;

import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Handler;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Toast;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MaleServiceFragment extends Fragment {
    FirebaseDatabase catDatabase;
    DatabaseReference catRef,offereRef;
    private RecyclerView recyclerView,offeremaleRecyclerView;
    private ArrayList<Category> catList;
    private ArrayList<Offere> offereList;
    private RelativeLayout loadingLayout;

    public MaleServiceFragment() {

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View catView =  inflater.inflate(R.layout.fragment_male_service, container, false);
        offeremaleRecyclerView = catView.findViewById(R.id.maleOffereRecyclerView);
        offeremaleRecyclerView.setHasFixedSize(true);
        recyclerView = catView.findViewById(R.id.categiryRecyclerView);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(container.getContext()));
        catList = new ArrayList<>();
        offereList = new ArrayList<>();

        loadingLayout = catView.findViewById(R.id.laoding_layout);

        catDatabase = FirebaseDatabase.getInstance();
        catRef = catDatabase.getReference().child("Categories");
        ValueEventListener valueEventListener = new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                for (DataSnapshot ds : snapshot.getChildren()){
                    if (ds.exists()){
                       Category category = ds.getValue(Category.class);
                       catList.add(category);
                       loadingLayout.setVisibility(View.GONE);
                    }else{
                        Toast.makeText(getContext(), "data", Toast.LENGTH_SHORT).show();
                        loadingLayout.setVisibility(View.GONE);
                        //set to No recycler data found
                    }
                }
                CategiryAdapter adapter = new CategiryAdapter(getContext(),catList);
                recyclerView.setAdapter(adapter);
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                Toast.makeText(getContext(), error.getMessage(), Toast.LENGTH_SHORT).show();
                loadingLayout.setVisibility(View.GONE);
            }
        };
        catRef.addListenerForSingleValueEvent(valueEventListener);
        offereRef = catDatabase.getReference("Male Offers");
        offereRef.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (snapshot.exists()) {
                    offeremaleRecyclerView.setVisibility(View.VISIBLE);
                    for (DataSnapshot offer : snapshot.getChildren()) {
                        if (offer.exists()) {
                            Offere offere = offer.getValue(Offere.class);
                            offereList.add(offere);
                        }
                    }
                    OfferAdapter adapter = new OfferAdapter(getContext(), offereList);
                    new Handler().postDelayed(new Runnable() {
                        @Override
                        public void run() {
                            offeremaleRecyclerView.smoothScrollToPosition(offereList.size()+1);
                        }
                    },5000);
                    offeremaleRecyclerView.setAdapter(adapter);
                }else {
                    offeremaleRecyclerView.setVisibility(View.GONE);
                    Toast.makeText(getContext(),"not any offere avalable",Toast.LENGTH_LONG).show();
                }

            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {

            }
        });
        return catView;
    }
}
this is female services code:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="@color/splashback"
    android:layout_height="match_parent"
    tools:context=".FemaleServiceFragment">

    <androidx.recyclerview.widget.RecyclerView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        tools:listitem="@layout/offere_list"
        android:visibility="gone"
        android:orientation="horizontal"
        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
        app:reverseLayout="false"
        android:id="@+id/femaleOffereRecyclerView"/>

    <androidx.recyclerview.widget.RecyclerView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/FemaleRecyclerView"
        android:layout_below="@+id/femaleOffereRecyclerView"
        tools:listitem="@layout/categiri_list" />
    <include layout="@layout/loading"/>

</RelativeLayout>
package com.codewithsk.barber;

import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Handler;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.Toast;

import com.codewithsk.barber.databinding.FragmentFemaleServiceBinding;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class FemaleServiceFragment extends Fragment {
    FragmentFemaleServiceBinding binding;
    FirebaseDatabase FemaleDatabase;
    DatabaseReference FemaleRef,offerFemaleRef;
    private ArrayList<Category> FemaleList;
    private ArrayList<Offere> offeresLists;
    private RelativeLayout femaleLoadingLayout;
    private OfferAdapter adapter;

    public FemaleServiceFragment() {
        // Required empty public constructor
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        binding = FragmentFemaleServiceBinding.inflate(inflater, container , false);
        binding.FemaleRecyclerView.setHasFixedSize(true);
        binding.FemaleRecyclerView.setLayoutManager(new LinearLayoutManager(container.getContext()));
        binding.femaleOffereRecyclerView.setHasFixedSize(true);
        FemaleDatabase = FirebaseDatabase.getInstance();
        FemaleRef = FemaleDatabase.getReference("Female Services");
        offerFemaleRef = FemaleDatabase.getReference("Female Offeres");
        FemaleList = new ArrayList<>();
        offeresLists = new ArrayList<>();
        femaleLoadingLayout = binding.getRoot().findViewById(R.id.laoding_layout);
        ValueEventListener listener = new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                for (DataSnapshot ds : snapshot.getChildren()){
                    if (ds.exists()){
                        Category category = ds.getValue(Category.class);
                        FemaleList.add(category);
                        femaleLoadingLayout.setVisibility(View.GONE);
                    } else {
                        Toast.makeText(getContext(), "Female data", Toast.LENGTH_SHORT).show();
                        femaleLoadingLayout.setVisibility(View.GONE);
                    }
                }
                CategiryAdapter adapter = new CategiryAdapter(getContext(),FemaleList);
                binding.FemaleRecyclerView.setAdapter(adapter);
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                Toast.makeText(getContext(), error.getMessage(), Toast.LENGTH_SHORT).show();
                femaleLoadingLayout.setVisibility(View.GONE);
            }
        };
        FemaleRef.addListenerForSingleValueEvent(listener);
        offerFemaleRef.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (snapshot.exists()){
                    binding.femaleOffereRecyclerView.setVisibility(View.VISIBLE);
                    for (DataSnapshot femaleOffere : snapshot.getChildren()){
                        if (femaleOffere.exists()){
                            Offere offeree = femaleOffere.getValue(Offere.class);
                            offeresLists.add(offeree);
                        }
                    }
                }else{
                    binding.femaleOffereRecyclerView.setVisibility(View.GONE);
                }
                adapter = new OfferAdapter(container.getContext(),offeresLists);
                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        binding.femaleOffereRecyclerView.smoothScrollToPosition(offeresLists.size());
                    }
                },5000);

                adapter.notifyDataSetChanged();
                binding.femaleOffereRecyclerView.setAdapter(adapter);
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {

            }
        });
        return binding.getRoot();
    }
}
male and femele adapters and viewHolder code:
package com.codewithsk.barber;

public class Category {
    String title,imgUrl,price,description;

    public Category(){}

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getImgUrl() {
        return imgUrl;
    }

    public void setImgUrl(String imgUrl) {
        this.imgUrl = imgUrl;
    }

    public String getPrice() {
        return price;
    }

    public void setPrice(String price) {
        this.price = price;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }
}

package com.codewithsk.barber;

import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;

public class CategiryViewHolder extends RecyclerView.ViewHolder {
    public ImageView ldCategiryImageView;
    public TextView tvCategiryTitle;
    public CardView cvCategityCard;
    public CategiryViewHolder(@NonNull View itemView) {
        super(itemView);
        ldCategiryImageView = itemView.findViewById(R.id.categiryImage);
        tvCategiryTitle = itemView.findViewById(R.id.categiryTitle);
        cvCategityCard = itemView.findViewById(R.id.categiryCard);
    }
}

package com.codewithsk.barber;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.squareup.picasso.Picasso;

import java.util.ArrayList;

import static com.codewithsk.barber.SessonManger.SAGAR;
import static com.codewithsk.barber.SessonManger.SESSON_NAME;
import static com.codewithsk.barber.SessonManger.START;

public class CategiryAdapter extends RecyclerView.Adapter<CategiryViewHolder> {
    Context context;
    ArrayList<Category> categoryArrayList;
    private SharedPreferences sharedPreferences;

    public CategiryAdapter(Context ctx,ArrayList<Category> categoryList){
        this.context = ctx;
        this.categoryArrayList = categoryList;
    }
    @NonNull
    @Override
    public CategiryViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View categoryLayout = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.categiri_list,parent,false);
        return new CategiryViewHolder(categoryLayout);
    }

    @Override
    public void onBindViewHolder(@NonNull CategiryViewHolder holder, int position) {
        Category category = categoryArrayList.get(position);
        holder.tvCategiryTitle.setText(category.getTitle());
        Picasso.get().load(category.imgUrl).into(holder.ldCategiryImageView);
        sharedPreferences = context.getSharedPreferences(SESSON_NAME,Context.MODE_PRIVATE);
        holder.cvCategityCard.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String value = sharedPreferences.getString(START,"");
                if (value.equals(SAGAR)){
                    Toast.makeText(context, "Your are guest user!!"+"\n"+"Register or login First!! and try", Toast.LENGTH_SHORT).show();
                }else {
                    String title = category.getTitle();
                    String imgUrl = category.getImgUrl();
                    String price = category.getPrice();
                    Intent intent = new Intent(context, CategoryDatailsActivity.class);
                    intent.putExtra("title", title);
                    intent.putExtra("imgUrl", imgUrl);
                    intent.putExtra("price",price);
                    context.startActivity(intent);
                }
            }
        });
    }

    @Override
    public int getItemCount() {
        return categoryArrayList.size();
    }
}

this is my appointment code:-
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:background="@color/splashback"
    android:layout_height="match_parent"
    tools:context=".MyAppointmentsFragment">
    <androidx.recyclerview.widget.RecyclerView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:visibility="gone"
        android:id="@+id/myAppointRecyclerView"/>
    <include layout="@layout/loading"/>
</RelativeLayout>
package com.codewithsk.barber;

import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.Toast;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MyAppointmentsFragment extends Fragment {
    DatabaseReference AppRef;
    private RecyclerView apprecyclerView;
    private ArrayList<Appoinments> AppointList;
    private RelativeLayout mLoadingLayout;

    public MyAppointmentsFragment() {
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View root =  inflater.inflate(R.layout.fragment_my_appointments, container, false);
        apprecyclerView = root.findViewById(R.id.myAppointRecyclerView);
        apprecyclerView.setHasFixedSize(true);
        apprecyclerView.setLayoutManager(new LinearLayoutManager(container.getContext()));
        AppointList = new ArrayList<>();
        mLoadingLayout = root.findViewById(R.id.laoding_layout);
        AppRef = FirebaseDatabase.getInstance().getReference("Users")
                .child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child("Appointments");

        AppRef.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                for (DataSnapshot ds : snapshot.getChildren()){
                    Appoinments appoinments = ds.getValue(Appoinments.class);
                    AppointList.add(appoinments);
                    mLoadingLayout.setVisibility(View.GONE);
                    apprecyclerView.setVisibility(View.VISIBLE);
                }
                MyBookingAdapter adapter = new MyBookingAdapter(getContext(),AppointList);
                adapter.notifyDataSetChanged();
                apprecyclerView.setAdapter(adapter);
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                Toast.makeText(getContext(), error.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
        return root;
    }
}
my Appointment adapter and holders
package com.codewithsk.barber;

public class Appoinments {

    Appoinments(){

    }
    String title,date,time,price,appointmentDatabaseKey,uid,custumerPhoneNo,AllRefKey,status;

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    public String getTime() {
        return time;
    }

    public void setTime(String time) {
        this.time = time;
    }

    public String getPrice() {
        return price;
    }

    public void setPrice(String price) {
        this.price = price;
    }

    public String getAppointmentDatabaseKey() {
        return appointmentDatabaseKey;
    }

    public void setAppointmentDatabaseKey(String appointmentDatabaseKey) {
        this.appointmentDatabaseKey = appointmentDatabaseKey;
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    public String getCustumerPhoneNo() {
        return custumerPhoneNo;
    }

    public void setCustumerPhoneNo(String custumerPhoneNo) {
        this.custumerPhoneNo = custumerPhoneNo;
    }

    public String getAllRefKey() {
        return AllRefKey;
    }

    public void setAllRefKey(String allRefKey) {
        AllRefKey = allRefKey;
    }
}

package com.codewithsk.barber;

import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import org.w3c.dom.Text;

public class MyBookingViewHolder extends RecyclerView.ViewHolder {
    public TextView myAppTitle,myAppPrice,myAppStatus;
    public Button cancelAppointment;
    public MyBookingViewHolder(@NonNull View itemView) {
        super(itemView);
        myAppTitle = itemView.findViewById(R.id.myAppointTitle);
        cancelAppointment = itemView.findViewById(R.id.cancelApp);
        myAppPrice = itemView.findViewById(R.id.myAppointPrice);
        myAppStatus = itemView.findViewById(R.id.appStatus);
    }
}

package com.codewithsk.barber;

import android.annotation.SuppressLint;
import android.content.Context;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.contentcapture.DataRemovalRequest;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MyBookingAdapter extends RecyclerView.Adapter<MyBookingViewHolder> {
    Context ctx;
    ArrayList<Appoinments> appoinmentsList;

    public MyBookingAdapter(Context context,ArrayList<Appoinments> appoinmentsArrayList){
        this.ctx = context;
        this.appoinmentsList = appoinmentsArrayList;
    }
    @NonNull
    @Override
    public MyBookingViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View MyAppointmentLayout = LayoutInflater.from(parent.getContext()).inflate(R.layout.my_appointments_list,parent,false);
        return new MyBookingViewHolder(MyAppointmentLayout);
    }

    @SuppressLint("SetTextI18n")
    @Override
    public void onBindViewHolder(@NonNull MyBookingViewHolder holder, int position) {
        Appoinments appoinments = appoinmentsList.get(position);
        holder.myAppTitle.setText(appoinments.getTitle());
        holder.myAppPrice.setText(appoinments.getPrice());
        if (appoinments.getStatus().equals("Pending")){
            holder.myAppStatus.setText("Pending");
            holder.myAppStatus.setTextColor(ctx.getResources().getColor(R.color.yellow));
        }else if (appoinments.getStatus().equals("Rejected")){
            holder.myAppStatus.setText("rejected"+"\n"+"Service are cerrently unavalable or Change Your Time/date");
            holder.cancelAppointment.setText("DELETE");
            holder.myAppStatus.setGravity(Gravity.CENTER);
            holder.myAppStatus.setTextColor(ctx.getResources().getColor(R.color.red));
            holder.cancelAppointment.setVisibility(View.VISIBLE);
        }
        else {
            holder.myAppStatus.setText("Accepted");
            holder.myAppStatus.setGravity(Gravity.CENTER);
            holder.myAppStatus.setTextColor(ctx.getResources().getColor(R.color.green));
            holder.cancelAppointment.setVisibility(View.GONE);
        }
        holder.cancelAppointment.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                         FirebaseDatabase.getInstance().getReference("Users")
                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
                        .child("Appointments")
                        .child(appoinments.getAppointmentDatabaseKey())
                        .removeValue()
                        .addOnCompleteListener(new OnCompleteListener<Void>() {
                            @Override
                            public void onComplete(@NonNull Task<Void> task) {
                                if (task.isSuccessful()){
                                    FirebaseDatabase.getInstance().getReference("All Appointment")
                                            .child(appoinments.getAllRefKey()).removeValue();
                                    mDelet(position);
                                    Toast.makeText(ctx, "Successfully Item Removed", Toast.LENGTH_SHORT).show();
                                }else {
                                    Toast.makeText(ctx, task.getException().toString(), Toast.LENGTH_SHORT).show();
                                }
                            }
                        });
            }
        });
    }
    @Override
    public int getItemCount() {
        return appoinmentsList.size();
    }
    public void mDelet(int item){
        appoinmentsList.remove(item);
        notifyItemRemoved(item);
    }
}

this is profile screen code:
package com.codewithsk.barber;

import android.annotation.SuppressLint;
import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;

import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.codewithsk.barber.databinding.FragmentProfileBinding;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import okhttp3.internal.cache.DiskLruCache;

public class ProfileFragment extends Fragment {
    FragmentProfileBinding binding;

    public ProfileFragment() {
        // Required empty public constructor
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        binding = FragmentProfileBinding.inflate(inflater,container,false);
        View profileRoot = binding.getRoot();
        DatabaseReference profileRef = FirebaseDatabase.getInstance().getReference("Users")
                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
        ValueEventListener valueEventListener = new ValueEventListener() {
            @SuppressLint("SetTextI18n")
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (snapshot.exists()){
                    String name = snapshot.getValue(User.class).getName();
                    String age = snapshot.getValue(User.class).getAge();
                    String pincode = snapshot.getValue(User.class).getPincode();
                    String number = snapshot.getValue(User.class).getMobile_no();
                    String gender = snapshot.getValue(User.class).getGender();

                    binding.userName.setText("Name: "+name);
                    binding.userAge.setText("Age: "+age);
                    binding.userNumber.setText("Mobile No: "+number);
                    binding.userPincode.setText("PinCode: "+pincode);
                    binding.userGender.setText("Gender: "+gender);
                    binding.getRoot().findViewById(R.id.laoding_layout).setVisibility(View.GONE);

                } else {
                    binding.userName.setText("NO DATA FOUND");
                    binding.userAge.setText("");
                    binding.userNumber.setText("");
                    binding.userPincode.setText("");
                    binding.userGender.setText("");
                    binding.getRoot().findViewById(R.id.laoding_layout).setVisibility(View.GONE);
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                Log.d("PROFILE",error.getMessage());
                binding.getRoot().findViewById(R.id.laoding_layout).setVisibility(View.GONE);
            }
        };
        profileRef.addListenerForSingleValueEvent(valueEventListener);
        return profileRoot;
    }
}
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="@color/splashback"
    android:gravity="center"
    tools:context=".ProfileFragment">
    <include layout="@layout/loading"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Name: Chetan Koli"
        android:gravity="center"
        android:textSize="20dp"
        android:id="@+id/userName"
        android:textStyle="bold"
        android:textAllCaps="true"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Age: 23"
        android:gravity="center"
        android:textSize="20dp"
        android:id="@+id/userAge"
        android:textStyle="bold"
        android:textAllCaps="true"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Pincode: 425413"
        android:gravity="center"
        android:textSize="20dp"
        android:id="@+id/userPincode"
        android:textStyle="bold"
        android:textAllCaps="true"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Number: 8830992395"
        android:gravity="center"
        android:textSize="20dp"
        android:id="@+id/userNumber"
        android:textStyle="bold"
        android:textAllCaps="true"
        />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Gender: Male"
        android:gravity="center"
        android:textSize="20dp"
        android:id="@+id/userGender"
        android:textStyle="bold"
        android:textAllCaps="true"
        />


</LinearLayout>

this is contact us and about us screen code:
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="@color/splashback"
    android:padding="8dp"
    tools:context=".AboutUsFragment">

  <TextView
      android:layout_width="match_parent"
      android:layout_height="wrap_content"
      android:text="@string/aboutfirst"
      android:fontFamily="@font/alfa_slab_one"
      android:textColor="@color/black"
      android:textSize="30dp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginTop="10dp"
        android:textColor="@color/black"
        android:id="@+id/shopname"
        android:text="loading..."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginTop="10dp"
        android:textColor="@color/black"
        android:id="@+id/shopaddress"
        android:text="loading..."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginTop="10dp"
        android:textColor="@color/black"
        android:id="@+id/shopemail"
        android:text="loading..."/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginTop="10dp"
        android:textColor="@color/black"
        android:id="@+id/shopcontact"
        android:text="loading..."/>

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:layout_marginTop="10dp"
        android:textColor="@color/black"
        android:id="@+id/shopowener"
        android:text="loading..."/>

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Send Query"
        android:layout_marginRight="15dp"
        android:layout_marginTop="10dp"
        android:id="@+id/sendQuery"
        android:layout_gravity="end"/>


</LinearLayout>
package com.codewithsk.barber;

import android.content.Intent;
import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.fragment.app.Fragment;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.codewithsk.barber.databinding.FragmentAboutUsBinding;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;


public class AboutUsFragment extends Fragment {
    FragmentAboutUsBinding binding;

    public AboutUsFragment() {
        // Required empty public constructor
    }
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        binding = FragmentAboutUsBinding.inflate(inflater, container, false);
        FirebaseDatabase.getInstance().getReference("Contact").addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (snapshot.exists()){
                    String shName = snapshot.getValue(About.class).getShopName();
                    String shAddr = snapshot.getValue(About.class).getShopAddress();
                    String shEmail = snapshot.getValue(About.class).getShopEmail();
                    String shPhone = snapshot.getValue(About.class).getShopPhone();
                    String shOwner = snapshot.getValue(About.class).getShopeOwner();

                    binding.shopname.setText(shName);
                    binding.shopaddress.setText(shAddr);
                    binding.shopemail.setText(shEmail);
                    binding.shopcontact.setText(shPhone);
                    binding.shopowener.setText(shOwner);
                    binding.sendQuery.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            Intent intent=new Intent(Intent.ACTION_SEND);
                            String[] recipients={shEmail};
                            intent.putExtra(Intent.EXTRA_EMAIL, recipients);
                            intent.putExtra(Intent.EXTRA_SUBJECT,"");
                            intent.putExtra(Intent.EXTRA_TEXT,"");
                            intent.putExtra(Intent.EXTRA_CC,"");
                            intent.setType("text/html");
                            intent.setPackage("com.google.android.gm");
                            startActivity(Intent.createChooser(intent, "Send mail"));
                        }
                    });
                }else {
                    binding.shopname.setText("Not any Admin Found");
                    binding.shopaddress.setText("");
                    binding.shopemail.setText("");
                    binding.shopcontact.setText("");
                    binding.shopowener.setText("");
                    binding.sendQuery.setVisibility(View.GONE);
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {

            }
        });

        return binding.getRoot();
    }
}
package com.codewithsk.barber;

public class About {
    String ShopName,ShopAddress,ShopEmail,ShopPhone,ShopeOwner;

    public About(){}

    public String getShopName() {
        return ShopName;
    }

    public void setShopName(String shopName) {
        ShopName = shopName;
    }

    public String getShopAddress() {
        return ShopAddress;
    }

    public void setShopAddress(String shopAddress) {
        ShopAddress = shopAddress;
    }

    public String getShopEmail() {
        return ShopEmail;
    }

    public void setShopEmail(String shopEmail) {
        ShopEmail = shopEmail;
    }

    public String getShopPhone() {
        return ShopPhone;
    }

    public void setShopPhone(String shopPhone) {
        ShopPhone = shopPhone;
    }

    public String getShopeOwner() {
        return ShopeOwner;
    }

    public void setShopeOwner(String shopeOwner) {
        ShopeOwner = shopeOwner;
    }
}



